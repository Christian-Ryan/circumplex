// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <RcppArmadillo.h>
#include <Rcpp.h>

using namespace Rcpp;

// angle_mean
double angle_mean(NumericVector x);
RcppExport SEXP _ssm_angle_mean(SEXP xSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type x(xSEXP);
    rcpp_result_gen = Rcpp::wrap(angle_mean(x));
    return rcpp_result_gen;
END_RCPP
}
// angle_median
double angle_median(NumericVector x);
RcppExport SEXP _ssm_angle_median(SEXP xSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type x(xSEXP);
    rcpp_result_gen = Rcpp::wrap(angle_median(x));
    return rcpp_result_gen;
END_RCPP
}
// compare_pi
NumericVector compare_pi(NumericVector x);
RcppExport SEXP _ssm_compare_pi(SEXP xSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type x(xSEXP);
    rcpp_result_gen = Rcpp::wrap(compare_pi(x));
    return rcpp_result_gen;
END_RCPP
}
// ssm_parameters
NumericVector ssm_parameters(NumericVector scores, NumericVector angles);
RcppExport SEXP _ssm_ssm_parameters(SEXP scoresSEXP, SEXP anglesSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type scores(scoresSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type angles(anglesSEXP);
    rcpp_result_gen = Rcpp::wrap(ssm_parameters(scores, angles));
    return rcpp_result_gen;
END_RCPP
}
// group_parameters
std::vector<double> group_parameters(NumericMatrix scores, NumericVector angles);
RcppExport SEXP _ssm_group_parameters(SEXP scoresSEXP, SEXP anglesSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericMatrix >::type scores(scoresSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type angles(anglesSEXP);
    rcpp_result_gen = Rcpp::wrap(group_parameters(scores, angles));
    return rcpp_result_gen;
END_RCPP
}
// group_scores
arma::mat group_scores(NumericMatrix X, NumericVector T);
RcppExport SEXP _ssm_group_scores(SEXP XSEXP, SEXP TSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericMatrix >::type X(XSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type T(TSEXP);
    rcpp_result_gen = Rcpp::wrap(group_scores(X, T));
    return rcpp_result_gen;
END_RCPP
}
// measure_scores
arma::mat measure_scores(NumericMatrix scales, NumericMatrix measures);
RcppExport SEXP _ssm_measure_scores(SEXP scalesSEXP, SEXP measuresSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericMatrix >::type scales(scalesSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type measures(measuresSEXP);
    rcpp_result_gen = Rcpp::wrap(measure_scores(scales, measures));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_ssm_angle_mean", (DL_FUNC) &_ssm_angle_mean, 1},
    {"_ssm_angle_median", (DL_FUNC) &_ssm_angle_median, 1},
    {"_ssm_compare_pi", (DL_FUNC) &_ssm_compare_pi, 1},
    {"_ssm_ssm_parameters", (DL_FUNC) &_ssm_ssm_parameters, 2},
    {"_ssm_group_parameters", (DL_FUNC) &_ssm_group_parameters, 2},
    {"_ssm_group_scores", (DL_FUNC) &_ssm_group_scores, 2},
    {"_ssm_measure_scores", (DL_FUNC) &_ssm_measure_scores, 2},
    {NULL, NULL, 0}
};

RcppExport void R_init_ssm(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
